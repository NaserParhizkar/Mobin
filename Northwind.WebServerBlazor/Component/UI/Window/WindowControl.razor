@inject IJSRuntime JSRuntime


<div @ref="kendoWindow" data-role="draggable"
     style="min-width: 90px;min-height: 50px; width: 400px; display: block; top: 225px; left: 224px;">
    <div class="k-window-titlebar k-header" style="margin-top: -33px;">
        &nbsp;<span class="k-window-title">@Title</span>
        <div class="k-window-actions">
            <a role="button" href="#" class="k-window-action k-link">
                <span role="presentation" class="k-icon k-i-close">Close</span>
            </a>
        </div>
    </div>
    <div data-uid="4759b54d-21eb-4e5c-8e56-f83897b3f491" class="k-popup-edit-form k-window-content k-content"
         data-role="window" tabindex="0" style="">
        @WindowContent
    </div>
</div>



@code {
    ElementReference kendoWindow;

    [Parameter] public string Title { get; set; }
    [Parameter] public int? Width { get; set; } = 400;
    [Parameter] public int? Height { get; set; } = 400;

    [Parameter] public bool? Modal { get; set; } = true;

    [Parameter] public bool? Scrollable { get; set; }
    [Parameter] public bool? Draggable { get; set; }
    [Parameter] public bool? Resizable { get; set; }
    [Parameter] public bool? Visible { get; set; }
    [Parameter] public List<Action> Actions { get; set; }

    [Parameter] public RenderFragment WindowContent { get; set; }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("blazor.kendoWindow", kendoWindow);


            //var name = await JSRuntime.InvokeAsync<string>(
            // "exampleJsFunctions.showPrompt",
            // "What's your name?");

        }
    }
}

