
@model Northwind.Repository.Employee

<form method="post" id="cuEntityFrm" action="/" onsubmit="event.preventDefault();return formSubmit()" >
    <div class="form-horizontal form-widgets col-xs-11 col-sm-12 col-md-12">
        <div class="container">
            <div class="form-group">
                @Html.LabelFor(t => t.FirstName, new { @class = "control-label col-xs-11 col-sm-1 col-md-1" })
                <div class="col-xs-12 col-sm-8 col-md-8">
                    @Html.Kendo().TextBoxFor(t => t.FirstName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(t => t.LastName, new { @class = "control-label col-xs-11 col-sm-1 col-md-1" })
                <div class="col-xs-12 col-sm-8 col-md-8">
                    @Html.Kendo().TextBoxFor(t => t.LastName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(t => t.Region, new { @class = "control-label col-xs-11 col-sm-1 col-md-1" })
                <div class="col-xs-12 col-sm-8 col-md-8">
                    @Html.Kendo().TextBoxFor(t => t.Region)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(t => t.Country, new { @class = "control-label col-xs-11 col-sm-1 col-md-1" })
                <div class="col-xs-12 col-sm-8 col-md-8">
                    @Html.Kendo().TextBoxFor(t => t.Country)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(t => t.City, new { @class = "control-label col-xs-11 col-sm-1 col-md-1" })
                <div class="col-xs-12 col-sm-8 col-md-8">
                    @Html.Kendo().TextBoxFor(t => t.City)
                </div>
            </div>
            @*<div class="form-group">
            @Html.LabelFor(t => t.Picture, new { @class = "control-label col-xs-11 col-sm-1 col-md-1" })
            <div class="col-xs-12 col-sm-8 col-md-8">
                @(Html.Kendo().Upload().Name("files").Multiple(true)
                    .Async(r => r.AutoUpload(true).Save("save", "PathDetail")))
            </div>
        </div>*@
        </div>
    </div>
    <div class="m-crud-footer">
        <div class="container">
            <input id="insertEntity" class="k-button k-primary" type="submit" value="بروزرسانی" />
            <input id="cancelInsertEntity" class="k-button k-cancel" type="reset" value="انصراف" onclick="cancelInsertEntity(e)" />
        </div>
    </div>
</form>
@*<div class="k-edit-buttons k-state-default">
        <a class="k-button k-button-icontext k-primary k-grid-update" href="#">
            <span class="k-icon k-update"></span>بروزرسانی
        </a>
        <a class="k-button k-button-icontext k-grid-cancel" href="#">
            <span class="k-icon k-cancel"></span>انصراف
        </a>
    </div>*@

<script type="text/javascript">
    function formSubmit(e) {

        // Initialize the Kendo UI Validator on your "form" container
        // (NOTE: Does NOT have to be a HTML form tag)

        var validator = $("#cuEntityFrm").kendoValidator({
            validate: function () {
                $(".k-invalid:first").focus();
            }
        }).data("kendoValidator");


        // Validate the input when the Save button is clicked
        if (validator.validate()) {
            // If the form is valid, the Validator will return true
            //save();
        }
        else {
            return false;
        }
    }

</script>