@using Northwind.WebUI.Controllers
@using Northwind.Repository;

@model OrderDetail

@{
    ViewData["Title"] = "MySearchInputs";
    Layout = "~/Views/Shared/_Layout-old.cshtml";
}






<form method="post" id="frm">

    <div class="panel panel-default">
        <div class="panel-heading"> <h3 class="panel-title">پارامترهای جستجو</h3></div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(t => t.Product.Category.CategoryName, new { @class = "control-label" })
                <div>
                    @*@(Html.Kendo().GridSearchDropDownListFor(t => t.Product.Category.CategoryId, "grid")
                        .DataSource(t => t.WebApi().Read(read => read.Action<CategoryApiController>(y => y.Read(null)))))*@
                    @*@(Html.Kendo().DropDownListFor(t => t.Product.Category.CategoryId)
                        .AutoFetchValueTextFields<Category>(fetchFlds => fetchFlds.DataValueField(x => x.CategoryId).DataTextField(x => x.CategoryName))
                        .DataSource(ds => ds.WebApi().AutoMakeQueryExpression(true).Read(read => read.Action<CategoryApiController>(y => y.Read(null)))))*@

                </div>
            </div>
        </div>
    </div>
    <button type="submit" onclick="sub()"></button>
</form>

<script type="text/javascript">
    function sub(e) {
        var aa = $('#frm').serializeArray();

        e.preventDefault();
    }
</script>

<br />
<br />
<br />
<br />



@(Html.Kendo().Grid<OrderDetail>()
                .Name("grid132").Columns(columns =>
                {
                    columns.Bound(x => x.OrderId);
                    columns.Bound(x => x.ProductId);
                    columns.Bound(x => x.Product.ProductName);
                    columns.Bound(x => x.UnitPrice);
        //columns.Bound(x => x.Quantity);
        //columns.Bound(x => x.Discount);

        //columns.Bound(x => x.Order.Employee.FirstName);
        //columns.Bound(x => x.Order.Employee.LastName);
        //columns.Bound(x => x.Product.Category.CategoryName);
        //columns.Bound(x => x.Product.Supplier.CompanyName);

        //columns.Bound(x => x.Product.Supplier.Country);
        //columns.Bound(x => x.Order.ShipName);
        //columns.Bound(x => x.Order.ShippedDate);

        //columns.Bound(x => x.Order.Employee.ReportsToNavigation.FirstName).Title("گزارش به شخص");
        //columns.Bound(x => x.Order.Employee.ReportsToNavigation.LastName).Title("گزارش به شخص");
    })
                .DataSource(dataSource =>
                {
                    dataSource
                    .WebApi()
                    .AutoMakeQueryExpression(true)
                    .PageSize(10)
                    .Read(read => read.Action<OrderDetailApiController>(t => t.Read(null)));

                }).AutoBind(true)
                .Pageable(t => t.Input(true))
                .Sortable()
)
